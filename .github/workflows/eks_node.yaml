name: EKS Terraform Deployment
on:
 # push:
    #branches:
    #  - main
   # paths:
     # - 'eks-cluster/eks_nodegroup/**'
  pull_request:
    branches:
      - main
    paths:
      - 'eks-cluster/eks_nodegroup/**'
  workflow_dispatch:
    inputs:
      action:
        description: "Specify the Terraform action: apply or destroy"
        required: true
        default: "apply"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
  #TF_VAR_SOURCE_GMAIL_ID: ${{ secrets.SOURCE_GMAIL_ID }}
  #TF_VAR_SOURCE_AUTH_PASSWORD: ${{ secrets.SOURCE_AUTH_PASSWORD }}
  #TF_VAR_DESTINATION_GMAIL_ID: ${{ secrets.DESTINATION_GMAIL_ID }}


jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: eks-cluster/eks_nodegroup
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: 1.10.5

    - name: Initialize Terraform
      run: terraform init

    - name: Validate Terraform
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan

    - name: Execute Terraform Action
      run: |
       if [ "${{ github.event.inputs.action }}" == "destroy" ]; then
        terraform state rm helm_release.prometheus
        terraform destroy -auto-approve
       else
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          terraform apply -auto-approve
        else
          echo "Skipping terraform apply as the branch is not main."
        fi
       fi
